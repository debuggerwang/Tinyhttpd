1 CGI
CGI是比较原始的开发动态网站的方式。你可以想象一下，一个网站的动态内容肯定是程序生成的，光是静态的html页面无法达到这个效果。
那么，这个程序就需要接受客户端的请求，然后进行相应处理，再返回给客户端，客户端和服务端的通信当然是通过HTTP协议。然后我们会发现，
这个程序在处理客户端请求的时候，大部分时候会进行很多重复的工作，比如说HTTP请求的解析。也就是说，你的程序需要解析HTTP请求，我的程序也需要解析。
于是为了DRY原则，Web服务器诞生了。（以下所说的都是CGI的工作模式）于是Web服务器可以解析这个HTTP请求，然后把这个请求的各种参数写进进程的环境变量，
比如REQUEST_METHOD，PATH_INFO之类的。之后呢，服务器会调用相应的程序来处理这个请求，这个程序也就是我们所要写的CGI程序了。它会负责生成动态内容，
然后返回给服务器，再由服务器转交给客户端。服务器和CGI程序之间通信，一般是通过进程的环境变量和管道。这样做虽然很清晰，但缺点就是每次有请求，
服务器都会fork and exec，每次都会有一个新的进程产生，开销还是比较大的。原因在与CGI程序是一个独立的程序，它是可以独立运行的（在提供HTTP请求的情况下），
它可以用几乎所有语言来写，包括perl，c，lua，python等等。所以对于一个程序，服务器只能以fork and exec的方式来调用它了。
